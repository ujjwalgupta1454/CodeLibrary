#include <iostream>
#include <vector>
using namespace std;

const int MOD = 1e9 + 7;

int countPalindromicSubsequences(string s) {
    int n = s.size();
    vector<int> count_0(n + 1, 0), count_1(n + 1, 0);
    for (int i = 1; i <= n; ++i) {
        count_0[i] = count_0[i - 1] + (s[i - 1] == '0');
        count_1[i] = count_1[i - 1] + (s[i - 1] == '1');
    }

    long long result = 0;
    for (int i = 2; i < n - 2; ++i) {
        if (s[i] == '0') {
            result += (long long)count_0[i - 1] * (count_0[n] - count_0[i]) % MOD;
        } else {
            result += (long long)count_1[i - 1] * (count_1[n] - count_1[i]) % MOD;
        }
    }

    return result % MOD;
}

int main() {
    string s = "0100110";
    cout << countPalindromicSubsequences(s) << endl;
    return 0;
}
